method = sample (Default)
method = sample (Default)
  sample
  sample
    num_samples = 1000 (Default)
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    thin = 1 (Default)
    adapt
    adapt
      engaged = 1 (Default)
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
    algorithm = hmc (Default)
      hmc
      hmc
        engine = nuts (Default)
        engine = nuts (Default)
          nuts
          nuts
            max_depth = 10 (Default)
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
        stepsize_jitter = 1
id = 3
id = 1
data
data
  file = noname_3.data.R
  file = noname_1.data.R
init = 2 (Default)
init = 2 (Default)
random
random
  seed = 8675309
  seed = 8675309
output
output
  file = noname_samples_3.csv
  file = noname_samples_1.csv
  diagnostic_file =  (Default)
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  refresh = 100 (Default)




Gradient evaluation took 1.5e-05 seconds
Gradient evaluation took 1.4e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.15 seconds.
1000 transitions using 10 leapfrog steps per transition would take 0.14 seconds.
Adjust your expectations accordingly!
Adjust your expectations accordingly!




Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
method = sample (Default)
  sample
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 1
id = 2
data
  file = noname_2.data.R
init = 2 (Default)
random
  seed = 8675309
output
  file = noname_samples_2.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)

method = sample (Default)
  sample
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)

      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
Gradient evaluation took 1.3e-05 seconds
            max_depth = 10 (Default)
        metric = diag_e (Default)
1000 transitions using 10 leapfrog steps per transition would take 0.13 seconds.
        metric_file =  (Default)
Adjust your expectations accordingly!

        stepsize = 1 (Default)

        stepsize_jitter = 1
id = 4
data
  file = noname_4.data.R
init = 2 (Default)
random
  seed = 8675309
output
  file = noname_samples_4.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)

Iteration:    1 / 2000 [  0%]  (Warmup)

Gradient evaluation took 1e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.1 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.112316 seconds (Warm-up)
               0.133799 seconds (Sampling)
               0.246115 seconds (Total)

Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.11479 seconds (Warm-up)
               0.1046 seconds (Sampling)
               0.21939 seconds (Total)

Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.125598 seconds (Warm-up)
               0.10495 seconds (Sampling)
               0.230548 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.121328 seconds (Warm-up)
               0.102353 seconds (Sampling)
               0.223681 seconds (Total)

